#/
# @license Apache-2.0
#
# Copyright (c) 2022 The Stdlib Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#/

# Workflow name:
name: productionize

# Workflow triggers:
on:
  push:
  workflow_dispatch:

# Workflow jobs:
jobs:
  productionize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Create new `production` branch
        run: |
          git checkout -b production
      - name: Transform Error Messages
        id: transform-error-messages
        uses: stdlib-js/transform-errors-action@main
      - name: Replace double quotes with single quotes in rewritten format string error messages
        run: |
          find . -name "*.js" -exec sed -E -i "s/Error\( format\( \"([a-zA-Z0-9]+)\"/Error\( format\( '\1'/g" {} \;
      - name: Replace double quotes with single quotes in rewritten string literal error messages
        run: |
          find . -name "*.js" -exec sed -E -i "s/Error\( format\(\"([a-zA-Z0-9]+)\"\)/Error\( format\( '\1' \)/g" {} \;
      - name: Replace double quotes with single quotes in inserted `require` calls
        run: |
          find . -name "*.js" -exec sed -E -i "s/require\( ?\"@stdlib\/error-tools-fmtprodmsg\" ?\);/require\( '@stdlib\/error-tools-fmtprodmsg' \);/g" {} \;
      - name: Change `@stdlib/string-format` to `@stdlib/error-tools-fmtprodmsg` in package.json if the former is a dependency, otherwise insert it as a dependency
        run: |
          if grep -q '"@stdlib/string-format"' package.json; then
            sed -i "s/\"@stdlib\/string-format\"/\"@stdlib\/error-tools-fmtprodmsg\"/g" package.json
          else
            sed -i "s/\"dependencies\": {/\"dependencies\": {\\n    \"@stdlib\/error-tools-fmtprodmsg\": \"^0.0.x\",/g" package.json
          fi
      - name: Configure git
        run: |
          git config --local user.email "noreply@stdlib.io"
          git config --local user.name "stdlib-bot"
      - name: Commit changes
        run: |
          git add -A
          git commit -m "Transform error messages"
      - name: Push changes
        run: |
          SLUG=${{ github.repository }}
          echo "Pushing changes to $SLUG..."
          git push "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$SLUG.git" production --force
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: production
      - uses: actions/setup-node@v2
        with:
          node-version: 16
        timeout-minutes: 5
      - name: Install production and development dependencies
        id: install
        run: |
          npm install || npm install || npm install
        timeout-minutes: 15
      - name: Build native add-on (if present)
        run: |
          if [ -f "binding.gyp" ]; then
            npm install node-gyp --no-save && ./node_modules/.bin/node-gyp rebuild
          fi
      - name: Run tests
        id: tests
        run: |
          npm test || npm test || npm test
